{"version":3,"sources":["../src/game.ts","../src/app.ts"],"sourcesContent":["import { GameOptions } from \"./types\";\r\nexport class Game{\r\n    private canvas:HTMLCanvasElement | null = null;\r\n    private ctx:CanvasRenderingContext2D | null = null;\r\n    private canvasWidth:number = 0;\r\n    private canvasHeight:number = 0;\r\n    private defCanvasWidth:number = 680;\r\n    private defCanvasHeight:number = 600;\r\n    private lastFrameTime:number = 0;\r\n    private deltaTime:number = 0;\r\n    constructor(options:GameOptions){\r\n        this.init(options);\r\n        this.start();\r\n        requestAnimationFrame(this.update);\r\n    };\r\n    init(options:GameOptions){\r\n        this.canvas = options.canvas ?? null;\r\n        if(!this.canvas){\r\n            const newCanvas:HTMLCanvasElement = document.createElement('canvas');\r\n            this.canvas = newCanvas;\r\n            document.body.appendChild(this.canvas);\r\n        };\r\n        this.ctx = this.canvas.getContext('2d');\r\n        if(!this.ctx) throw new Error(\"CTX NOT FOUND!\");\r\n        this.canvasWidth = options.canvasWidth ?? 0;\r\n        this.canvasHeight = options.canvasHeight ?? 0;\r\n        if(this.canvasWidth === 0) this.canvasWidth = this.defCanvasWidth;\r\n        this.canvasHeight = options.canvasHeight ?? 0;\r\n        if(this.canvasHeight === 0) this.canvasHeight = this.defCanvasHeight;\r\n        this.canvas.width = this.canvasWidth;\r\n        this.canvas.height = this.canvasHeight;\r\n        \r\n    };\r\n    start(){\r\n\r\n    };\r\n    update(timeStamp:number){\r\n        this.deltaTime = (timeStamp - this.lastFrameTime) / 1000;\r\n        this.lastFrameTime = timeStamp;\r\n\r\n    };\r\n    private getCanvas() : HTMLCanvasElement{\r\n        return this.canvas as HTMLCanvasElement;\r\n    };\r\n    private getCtx() : CanvasRenderingContext2D{\r\n        return this.ctx as CanvasRenderingContext2D;\r\n    };\r\n    private getDeltaTime() : number{\r\n        return this.deltaTime;\r\n    }\r\n}","import { Game } from \"./game\";\r\nimport { GameOptions } from \"./types\";\r\n\r\nstart();\r\nfunction start(){\r\n    const gameOptions:GameOptions = {}\r\n    const game:Game = new Game(gameOptions);\r\n}"],"mappings":";;;AACO,IAAM,OAAN,MAAU;AAAA,EACL,SAAkC;AAAA,EAClC,MAAsC;AAAA,EACtC,cAAqB;AAAA,EACrB,eAAsB;AAAA,EACtB,iBAAwB;AAAA,EACxB,kBAAyB;AAAA,EACzB,gBAAuB;AAAA,EACvB,YAAmB;AAAA,EAC3B,YAAY,SAAoB;AAC5B,SAAK,KAAK,OAAO;AACjB,SAAK,MAAM;AACX,0BAAsB,KAAK,MAAM;AAAA,EACrC;AAAA,EACA,KAAK,SAAoB;AACrB,SAAK,SAAS,QAAQ,UAAU;AAChC,QAAG,CAAC,KAAK,QAAO;AACZ,YAAM,YAA8B,SAAS,cAAc,QAAQ;AACnE,WAAK,SAAS;AACd,eAAS,KAAK,YAAY,KAAK,MAAM;AAAA,IACzC;AAAC;AACD,SAAK,MAAM,KAAK,OAAO,WAAW,IAAI;AACtC,QAAG,CAAC,KAAK,IAAK,OAAM,IAAI,MAAM,gBAAgB;AAC9C,SAAK,cAAc,QAAQ,eAAe;AAC1C,SAAK,eAAe,QAAQ,gBAAgB;AAC5C,QAAG,KAAK,gBAAgB,EAAG,MAAK,cAAc,KAAK;AACnD,SAAK,eAAe,QAAQ,gBAAgB;AAC5C,QAAG,KAAK,iBAAiB,EAAG,MAAK,eAAe,KAAK;AACrD,SAAK,OAAO,QAAQ,KAAK;AACzB,SAAK,OAAO,SAAS,KAAK;AAAA,EAE9B;AAAA,EACA,QAAO;AAAA,EAEP;AAAA,EACA,OAAO,WAAiB;AACpB,SAAK,aAAa,YAAY,KAAK,iBAAiB;AACpD,SAAK,gBAAgB;AAAA,EAEzB;AAAA,EACQ,YAA+B;AACnC,WAAO,KAAK;AAAA,EAChB;AAAA,EACQ,SAAmC;AACvC,WAAO,KAAK;AAAA,EAChB;AAAA,EACQ,eAAuB;AAC3B,WAAO,KAAK;AAAA,EAChB;AACJ;;;AC/CA,MAAM;AACN,SAAS,QAAO;AACZ,QAAM,cAA0B,CAAC;AACjC,QAAM,OAAY,IAAI,KAAK,WAAW;AAC1C;","names":[]}